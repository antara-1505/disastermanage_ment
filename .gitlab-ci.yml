# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
# include:
#   - component: gitlab.com/google-gitlab-components/artifact-registry/upload-artifact-registry@main
#     inputs:
#       stage: deploy
#       source: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#       target: asia-south2-docker.pkg.dev/multi-ai-agent-system-463413/my-docker-images-repo/multi-ai-agent-system:$CI_COMMIT_SHORT_SHA

stages:
  - build
  - test
  - push
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""  # Required for DinD
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  GAR_IMAGE_TAG: asia-south2-docker.pkg.dev/multi-ai-agent-system-463413/my-docker-images-repo/multi-ai-agent-system:$CI_COMMIT_SHORT_SHA

# 🔨 BUILD
build-job:
  stage: build
  script:
    - echo "Compiling code..."
    - echo "Compile done."

# ✅ TEST
unit-test-job:
  stage: test
  script:
    - echo "Running unit tests..."
    - sleep 10

lint-test-job:
  stage: test
  script:
    - echo "Linting code..."
    - sleep 5

# 🐳 BUILD & PUSH TO GITLAB REGISTRY
docker-build-push-job:
  stage: push
  image: docker:20.10
  services:
    - docker:20.10-dind
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - echo "Building image:" "$IMAGE_TAG"
    - docker build -t "$IMAGE_TAG" .
    - echo "Pushing to GitLab Registry..."
    - docker push "$IMAGE_TAG"

# 🚀 DEPLOY TO GOOGLE ARTIFACT REGISTRY
upload-artifact-registry:
  stage: deploy
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:slim-with-docker
  services:
    - docker:20.10-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - gcloud auth configure-docker asia-south2-docker.pkg.dev --quiet
    - echo $GCLOUD_SERVICE_KEY | base64 -d > ${CI_PROJECT_DIR}/gcloud-key.json
    - gcloud auth activate-service-account --key-file=${CI_PROJECT_DIR}/gcloud-key.json
    - gcloud config set project multi-ai-agent-system-463413
  script:
    - docker pull "$IMAGE_TAG"
    - docker tag "$IMAGE_TAG" "$GAR_IMAGE_TAG"
    - docker push "$GAR_IMAGE_TAG"